---
import { PlayCircle } from "lucide-astro";

export interface Props {
  id: string;
  title: string;
  excerpt?: string;
  modalId: string;
}
const { id, title, excerpt = "", modalId } = Astro.props;
const thumb = `https://img.youtube.com/vi/${id}/hqdefault.jpg`;
---

<div class="group relative overflow-hidden rounded-2xl bg-white shadow ring-1 ring-black/5 transition-transform duration-200 hover:shadow-lg hover:scale-[1.01]">
  <button id={`open-${modalId}`} type="button"
    class="block w-full text-left focus:outline-none"
    aria-haspopup="dialog" aria-controls={modalId}
  >
    <div class="relative aspect-video bg-black">
      <img src={thumb} alt={title} loading="lazy" width="1280" height="720" class="h-full w-full object-cover" />
      <div class="absolute inset-0 grid place-items-center">
        <span class="inline-flex items-center gap-2 rounded-full bg-white/85 text-gray-900 px-3 py-1 text-sm font-medium opacity-0 transition-opacity duration-200 group-hover:opacity-100">
          <PlayCircle size={18} />
          Ver entrevista
        </span>
      </div>
    </div>
    <div class="p-4">
      <h3 class="text-base font-semibold">{title}</h3>
      {excerpt && <p class="mt-1 text-sm text-gray-600 line-clamp-3">{excerpt}</p>}
      <span class="mt-3 inline-flex items-center gap-2 text-sm font-medium text-blue-700">
        <PlayCircle size={16} /> Ver entrevista
      </span>
    </div>
  </button>
</div>

<!-- Modal compartido; ya no insertamos modales por card para reducir el DOM. -->

<script is:inline data-modal-id={modalId} data-id={id} data-title={title} data-excerpt={excerpt}>
  (() => {
    const scriptEl = document.currentScript;
    const modalId = scriptEl?.dataset.modalId || '';
    const openBtnId = `open-${modalId}`;
    const vid = scriptEl?.dataset.id || '';
    const t = scriptEl?.dataset.title || '';
    const ex = scriptEl?.dataset.excerpt || '';
    document.addEventListener('DOMContentLoaded', () => {
      const btn = document.getElementById(openBtnId);
      if (!btn) return;
      btn.addEventListener('click', (e) => {
        e.preventDefault();
        if (window.CefemSharedModal && typeof window.CefemSharedModal.openVideo === 'function') {
          window.CefemSharedModal.openVideo({ id: vid, title: t, excerpt: ex });
        }
      });
    });
  })();
  </script>

<style>
  .vignette-edge { 
    background: radial-gradient(ellipse at center, rgba(0,0,0,0) 55%, rgba(0,0,0,0.35) 100%);
  }
</style>
